{
  "swagger": "2.0",
  "info": {
    "version": "0.1",
    "title": "club organization",
    "description": "\nThis api describes entities that might be useful to a club organization, like Members, Events, and Volunteers. We've also included Adminstration contacts (President, Secretary, etc) and a User table to manage authentication. The data is stored in a MongoDB database.\n\n### 401 Unauthorized\nTo use routes that modify data, you need to be authenticated. [Click here to log in with your Google account](/auth/google).\n\n### Credits\nThis API was written by Team 7 (Shauntal, Tianna, Kelsey, Sam, John) as a final project for CSE 341. [Source code is available on GitHub](https://github.com/team7byui/team7_final_project).\n\n**This api not intended for regular use.**\n    "
  },
  "host": "team7project.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/administration/": {
      "get": {
        "tags": [
          "Administration"
        ],
        "summary": "Show all admins info",
        "description": "Finds all admin members info",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdministrationArray"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Administration"
        ],
        "summary": "Add a new admin position to database",
        "description": "Enter new admin positions information to add to database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Administration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/InsertedResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/administration/{id}": {
      "get": {
        "tags": [
          "Administration"
        ],
        "summary": "Show an admins info based off id",
        "description": "Finds an admin members info based off id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Administration"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Administration"
        ],
        "summary": "Update an admins info based off id",
        "description": "Changes an admin members info based off their id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Administration"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Administration"
        ],
        "summary": "Delete an admins info based off id",
        "description": "Deletes an admin members info based off their id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Show users info based off id",
        "description": "Show users email and hashed password based off id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a users info based off id",
        "description": "Update a users email and hashed password based off id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Member"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user",
        "description": "Delete a users email and hashed password",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "description": "Create a users email and hashed password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Member"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/exists/{username}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Verify that username exists in db",
        "description": "Returns true if username exists.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/members/": {
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Show all members info",
        "description": "Shows all members info",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MemberArray"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "Create a new member",
        "description": "Fill in new members info to create a new member",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Member"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/InsertedResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/members/{id}": {
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Get member info based off id",
        "description": "Show a members info based off id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Member"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Members"
        ],
        "summary": "Update member info based off id",
        "description": "Update member info based off id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Members"
        ],
        "summary": "Delete member info based off id",
        "description": "Delete member info based off id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/events/": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Show all events info",
        "description": "Displays all events info",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventArray"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Create an event",
        "description": "Fill in event info to create event",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/InsertedResponse"
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Show event info based off id",
        "description": "Displays event info based off id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Update an event",
        "description": "Fill in new event info to update event",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Delete an event",
        "description": "Delete event info using event id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/volunteers/": {
      "get": {
        "tags": [
          "Volunteers"
        ],
        "summary": "Show all volunteer info",
        "description": "See all volunteer info",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VolunteerArray"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Volunteers"
        ],
        "summary": "Create new volunteer info",
        "description": "Create new volunteer info",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "event": {
                  "example": "any"
                },
                "opportunity": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/InsertedResponse"
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/volunteers/{id}": {
      "get": {
        "tags": [
          "Volunteers"
        ],
        "summary": "Shows volunteer info based off id",
        "description": "See volunteer info for each event based off id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Volunteer"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Volunteers"
        ],
        "summary": "Update volunteer info based off id",
        "description": "Update volunteer info based off id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "event": {
                  "example": "any"
                },
                "opportunity": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Volunteers"
        ],
        "summary": "Delete volunteer info",
        "description": "Delete volunteer info",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "InsertedResponse": {
      "type": "object",
      "properties": {
        "acknowledged": {
          "type": "boolean",
          "description": "Server acknowledged the update"
        },
        "insertedId": {
          "type": "string",
          "description": "Id of the newly inserted record"
        }
      }
    },
    "Administration": {
      "title": "Administration",
      "required": [
        "firstName",
        "lastName",
        "address",
        "phoneNumber",
        "email",
        "position"
      ],
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First name",
          "example": "Jane"
        },
        "lastName": {
          "type": "string",
          "description": "Last name",
          "example": "Seymour"
        },
        "address": {
          "type": "string",
          "description": "Home address",
          "example": "847 Pimpernel Street, Marquette, MI 49855"
        },
        "phoneNumber": {
          "type": "string",
          "description": "10-digit phone number",
          "example": "1234567890"
        },
        "email": {
          "type": "string",
          "description": "An email address",
          "example": "jane@somewhere.com"
        },
        "position": {
          "type": "string",
          "description": "Admin's role in the organization",
          "example": "Diva"
        }
      }
    },
    "AdministrationArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Administration"
      }
    },
    "Event": {
      "title": "Event",
      "required": [
        "title",
        "startDate",
        "location",
        "details"
      ],
      "properties": {
        "title": {
          "type": "string",
          "description": "Event title",
          "example": "Trunk or Treat"
        },
        "startDate": {
          "type": "string",
          "description": "The start date and time in ISO 8601 format",
          "example": "2023-05-17T17:00:00.000Z"
        },
        "endDate": {
          "type": "string",
          "description": "The end date and time in ISO 8601 format",
          "example": "2023-05-17T18:30:00.000Z"
        },
        "duration": {
          "type": "string",
          "description": "The duration of the event in ISO 8601 format",
          "example": "PT1H30M"
        },
        "location": {
          "type": "string",
          "description": "The physical location of the event",
          "example": "1325 E Malibu Drive, Tempe, AZ 85282"
        },
        "details": {
          "type": "string",
          "description": "A description of the event",
          "example": "Come dressed up. Make sure to pick treat and not trick."
        },
        "volunteersNeeded": {
          "type": "string",
          "description": "A comma separated list of volunteer activities.",
          "example": "Donate candy, decorate trunks, bouncy house supervisor"
        }
      }
    },
    "EventArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Event"
      }
    },
    "Member": {
      "title": "Member",
      "required": [
        "firstName",
        "lastName",
        "address",
        "phoneNumber",
        "email",
        "birthday",
        "allFamilyMembers"
      ],
      "properties": {
        "firstName": {
          "type": "string",
          "description": "A given name",
          "example": "Samantha"
        },
        "lastName": {
          "type": "string",
          "description": "A family name",
          "example": "Smith"
        },
        "address": {
          "type": "string",
          "description": "A physical address",
          "example": "4865 S Frontier Street, Tempe, AZ 85281"
        },
        "phoneNumber": {
          "type": "string",
          "description": "10-digit phone number",
          "example": "1234567890"
        },
        "email": {
          "type": "string",
          "description": "An email address",
          "example": "sammy@example.com"
        },
        "birthday": {
          "type": "string",
          "description": "A birthday a standard date format",
          "example": "February 28, 1984"
        },
        "allFamilyMembers": {
          "type": "string",
          "description": "A comma separated list of first names",
          "example": "Derick, Samantha, Eric, Savannah"
        }
      }
    },
    "MemberArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Member"
      }
    },
    "User": {
      "title": "User",
      "properties": {
        "username": {
          "type": "string",
          "description": "The user name"
        },
        "password": {
          "type": "string",
          "description": "Password hash (not included in default view)"
        },
        "googleId": {
          "type": "string",
          "description": "Google identifier (not included in default view)"
        },
        "email": {
          "type": "string",
          "description": "An email address"
        },
        "displayName": {
          "type": "string",
          "description": "The user name for display purposes."
        },
        "firstName": {
          "type": "string",
          "description": "A given name"
        },
        "lastName": {
          "type": "string",
          "description": "A family name"
        },
        "image": {
          "type": "string",
          "description": "URL to photo resource"
        }
      }
    },
    "UserArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "Volunteer": {
      "title": "Volunteer",
      "required": [
        "event",
        "opportunity",
        "name"
      ],
      "properties": {
        "event": {
          "type": "string",
          "description": "Title of related event",
          "example": "Trunk or Treat"
        },
        "opportunity": {
          "type": "string",
          "description": "A volunteer task",
          "example": "Hand out snacks"
        },
        "name": {
          "type": "string",
          "description": "The full name of the volunteer",
          "example": "Samantha Smith"
        }
      }
    },
    "VolunteerArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Volunteer"
      }
    }
  }
}