// NOTE: Before using this file, select your preferred REST Client environment on the status bar in VS Code.

@userId = 6466d734172e9435fb18f97d
@weakPassword = awesomeSauce
@strongerPassword = awesomeSauce123!

### Attempt to steal users DB - SHOULD FAIL with 404 error.
GET {{host}}/users

### Get a single object
# TODO: This shows the hashed password, which could be a security risk.
# @name oneUser
GET {{host}}/users/{{userId}}

@username = {{oneUser.response.body.username}}

### This should return "true"
GET {{host}}/users/exists/{{username}}

### This should return "false" since the username is available.
GET {{host}}/users/exists/newSignup

### Add user -- SHOULD FAIL with password complexity error.
POST {{host}}/users/
Content-Type: application/json

{
    "username": "{{username}}",
    "password": "{{weakPassword}}"
}

### Add user -- SHOULD FAIL with duplicate user.
POST {{host}}/users/
Content-Type: application/json

{
    "username": "{{username}}",
    "password": "{{strongerPassword}}"
}

### Update user by id
PUT {{host}}/users/{{userId}}
Content-Type: application/json

{
    "username": "{{username}}-123",
    "password": "{{strongerPassword}}"
}

### Verify
GET {{host}}/users/{{userId}}

### Return to original username
PUT {{host}}/users/{{userId}}
Content-Type: application/json

{
    "username": "{{username}}",
    "password": "{{strongerPassword}}"
}

### Add a new record
# @name newUser
POST {{host}}/users/
Content-Type: application/json

{
    "username": "{{username}}-123",
    "password": "{{strongerPassword}}"
}

#### Variables
@newUserId = {{newUser.response.body.insertedId}}

### Verify
# TODO: Currently returns 400, but probably should be 404.
GET {{host}}/users/{{newUserId}}

### Delete
DELETE {{host}}/users/{{newUserId}}

### BAD request to test validation
PUT {{host}}/users/bad-id
Content-Type: application/json

{
    "username": "",
    "password": "a"
}

