#* NOTE: Before using this file, select your preferred REST Client environment on the status bar in VS Code.

###
# @name allEvents
GET {{host}}/events

@eventId = {{allEvents.response.body.$[7]._id}}

###
# @name oneEvent
GET {{host}}/events/{{eventId}}

@title = {{oneEvent.response.body.title}}
@date = {{oneEvent.response.body.date}}
@time = {{oneEvent.response.body.time}}
@startDate = {{oneEvent.response.body.startDate}}
@endDate = {{oneEvent.response.body.endDate}}
@duration = {{oneEvent.response.body.duration}}
@location = {{oneEvent.response.body.location}}
@details = {{oneEvent.response.body.details}}
@volunteersNeeded = {{oneEvent.response.body.volunteersNeeded}}

###
PUT {{host}}/events/{{eventId}}
Content-Type: application/json

{
  "title": "{{title}}",
  "date": "{{date}}",
  "time": "{{time}}",
  "location": "{{location}}",
  "details": "{{details}}",
  "volunteersNeeded": "{{volunteersNeeded}}"
}

### New event
#* NOTE: startDate, endDate, and duration are calculated from friendly strings.
# @name newEvent
POST {{host}}/events
Content-Type: application/json

{
  "title": "{{title}}",
  "date": "{{date}}",
  "time": "{{time}}",
  "location": "{{location}}",
  "details": "{{details}}",
  "volunteersNeeded": "{{volunteersNeeded}}"
}

####
@newEventId = {{newEvent.response.body.insertedId}}

### Verify
GET {{host}}/events/{{newEventId}}

### Clean it up
DELETE {{host}}/events/{{newEventId}}

### Create a new event by specifying an ISO date and duration
# @name newEventIso
POST {{host}}/events
Content-Type: application/json

{
  "title": "{{title}}",
  "startDate": "{{startDate}}",
  "duration": "{{duration}}",
  "location": "{{location}}",
  "details": "{{details}}",
  "volunteersNeeded": "{{volunteersNeeded}}"
}

#### Variables
@newEventIsoId = {{newEventIso.response.body.insertedId}}

### Verify
GET {{host}}/events/{{newEventIsoId}}

### Clean up
DELETE {{host}}/events/{{newEventIsoId}}

### Create new event with ISO start and end date
#* NOTE: Multi-day event, from Jan 23 to Jan 27.
# @name newEventIso
POST {{host}}/events
Content-Type: application/json

{
  "title": "Winter Fundraiser",
  "startDate": "2023-01-24T15:50:00.000Z",
  "endDate": "2023-01-28T07:00:00.000Z",
  "location": "{{location}}",
  "details": "{{details}}",
  "volunteersNeeded": "{{volunteersNeeded}}"
}

#### Variables
@newEventIso = {{newEventIso.response.body.insertedId}}


### Testing validation
#! Should fail with validation errors.
PUT {{host}}/events/bad-id
Content-Type: application/json

{
  "title": "",
  "startDate": "2023-01-24T15:50:00.000Z",
  "endDate": "not a date",
  "location": "",
  "details": "",
  "volunteersNeeded": ""
}

### ADVANCED: Get events with volunteers.
#* This query returns all events for which volunteers are signed-up.
#* The pipeline joins three tables, Events, Volunteers, and Members.
GET {{host}}/events
Content-Type: application/json

[
  { "$lookup": {
      "from": "volunteers",
      "let": { "myTitle": "$title"},
      "pipeline": [
        { "$match": { 
            "$expr": { "$eq": [ "$event", "$$myTitle" ] } 
          } 
        },
        { "$lookup": {
            "from": "membersWithFullNames",
            "let": { "myName": "$name" },
            "pipeline": [
              { "$match": { "$expr": { "$eq": [ "$fullName", "$$myName" ] } } }
            ],
            "as": "memberDetail"
          }
        },
        { "$unwind": "$memberDetail" }
      ],
      "as": "volunteers"
    }
  },
  { "$match": {
      "volunteers": { "$ne": [] }
    }
  },
  { "$project": {
      "_id": 0,
      "title": 1,
      "volunteersNeeded": 1,
      "volunteers.opportunity": 1,
      "volunteers.memberDetail": 1
    }
  }
]